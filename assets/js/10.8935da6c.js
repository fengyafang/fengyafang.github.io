(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{365:function(a,t,e){"use strict";e.r(t);var s=e(44),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"node中的路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node中的路径"}},[a._v("#")]),a._v(" node中的路径")]),a._v(" "),e("ul",[e("li",[a._v("'./'   表示执行node命令时的目录. 比如当前在/a目录 执行以下代码")])]),a._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[a._v("node a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("js \ncd b node b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("js\n")])])]),e("p",[a._v("则'./'分别代表 /a 和 /a/b")]),a._v(" "),e("ul",[e("li",[a._v("require 中的'./' 指向执行require命令所在的文件 不会改变")]),a._v(" "),e("li",[a._v("'__dirname' 表示正在执行的js文件所在目录 不会改变")]),a._v(" "),e("li",[a._v("'__filename' 表示正在执行文件的路径名+文件名")])]),a._v(" "),e("h2",{attrs:{id:"node-中使用当前路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-中使用当前路径"}},[a._v("#")]),a._v(" node 中使用当前路径")]),a._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[a._v("path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("dirname")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("__filename"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n__dirname\npath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("__dirname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),e("h2",{attrs:{id:"node-中的path"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-中的path"}},[a._v("#")]),a._v(" node 中的path")]),a._v(" "),e("ul",[e("li",[a._v("path.resolve(a,b,.....) 把参数从右到左拼成一个路径 遇到/就停止 相当于命令行输入 "),e("code",[a._v("cd a cd b .....")])]),a._v(" "),e("li",[a._v("path.relative(a,b)  返回从 a 到 b 的相对路径\n"),e("code",[a._v("path.relative('/a/b/c','/a')")]),a._v(" 返回"),e("code",[a._v("../../")])])]),a._v(" "),e("h2",{attrs:{id:"path-resolve中使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#path-resolve中使用"}},[a._v("#")]),a._v(" path.resolve中使用'./'")]),a._v(" "),e("p",[a._v("如果 './'为第一个参数 './'代表执行"),e("code",[a._v("node")]),a._v("命令时所在目录\n如果前面有参数 './'代表当前目录")]),a._v(" "),e("h2",{attrs:{id:"path-join-与path-resolver-区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#path-join-与path-resolver-区别"}},[a._v("#")]),a._v(" path.join()与path.resolver()区别")]),a._v(" "),e("p",[e("code",[a._v("path.join('/foo','/bar')")]),a._v(" 返回 "),e("code",[a._v("/foo/bar")]),e("br"),a._v(" "),e("code",[a._v("path.resolve('/foo','/bar')")]),a._v(" 返回 "),e("code",[a._v("c:/bar")])])])}),[],!1,null,null,null);t.default=n.exports}}]);